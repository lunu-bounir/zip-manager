html,
body {
  height: 100%;
}
body {
  text-align: center;
  color: #2c3e50;
  margin: 0;
  display: flex;
  flex-direction: column;
}
body,
table {
  font-family: "Helvetica Neue", Helvetica, sans-serif;
  font-size: 12px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
a {
  color: #0054b6;
  text-decoration: none;
}
header {
  height: 80px;
  background-color: #d7d7d7;
  padding: 10px;
  user-select: none;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(3, min-content) 1fr;
}

@media screen and (max-width: 600px) {
  header {
    grid-template-columns: repeat(3, min-content);
    height: unset;
  }
  #method {
    grid-column: 1/6;
    width: 100% !important;
    align-self: start !important;
    justify-self: start !important;
  }
  #method label {
    flex-grow: 1;
  }
}

body.rating header {
  grid-template-columns: repeat(4, min-content) 1fr;
}

@media screen and (max-width: 600px) {
  body.rating header {
    grid-template-columns: repeat(4, min-content);
    height: unset;
  }
}

header > div {
  display: flex;
  flex-direction: column;
  align-items: center;
}
header > div:not(#method) {
  cursor: pointer;
}
header > div:not(#method) * {
  pointer-events: none;
}
header[data-empty=true] > div[data-cmd="extract"] {
  opacity: 0.5;
  pointer-events: none;
}
header > div img {
  width: 28px;
  height: 28px;
  margin: 5px;
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  padding: 10px;
}
main {
  flex: 1;
  position: relative;
  overflow-x: hidden;
  overflow-y: auto;
  user-select: none;
}
main table {
  width: 100%;
  border-spacing: 0;
  table-layout: fixed;
}
main tbody:empty::after {
  content: 'Drag and drop a ZIP, RAR, 7Z or any other archive format into the view';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 130%;
}
body[data-mode=parse] main tbody:empty::after {
  content: 'Fetching data. Please wait...';
}
body[data-mode=busy] main tbody:empty::after {
  content: 'Parsing the data. Please wait...';
}
main th,
main td {
  white-space: nowrap;
  padding: 5px;
  text-align: left;
  overflow: hidden;
  text-overflow: ellipsis;
}

@media screen and (max-width: 600px) {
  main th,
  main td {
    padding: 10px 5px;
  }
}
main th {
  font-weight: normal;
  border-top: solid 1px #d6d6d6;
  border-bottom: solid 1px #d6d6d6;
  position: relative;
}
main td {
  cursor: pointer;
}
main th:not(:last-child)::after {
  position: absolute;
  right: 0;
  top: 0;
  content: ' ';
  border-right: solid 1px #e5e5e5;
  display: inline;
  height: 100%;
  background-color: red;
}
main th:nth-child(2),
main td:nth-child(2) {
  text-align: right;
}
main th:nth-child(3),
main td:nth-child(3) {
  text-align: center;
}
main tr:nth-child(even) {
  background-color: #f5f5f5;
}
main tr[data-directory=true] {
  pointer-events: none;
  color: #633d0d;
  font-weight: bold;
}
main tr[data-selected=true] {
  color: #fff;
  background-color: #106cd6;
}

#log[data-visible=false] {
  display: none;
}
#log > div {
  background-color: #d7d7d7;
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
#log input {
  border: none;
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.1);
  margin: 3px;
  outline: none;
  cursor: pointer;
}
#log ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
#log li {
  padding: 2px 10px;
  text-align: left;
  background-color: #fee;
  border-top: solid 1px #ffd0d0;
  border-bottom: solid 1px #ffd0d0;
  margin-bottom: -1px;
}
#log li span:first-child {
  color: #757575;
  margin-right: 10px;
}
#log li span:last-child {
  color: #ff0001;
}

footer {
  height: 24px;
  background-color: #d7d7d7;
  display: flex;
  align-items: center;
  justify-content: center;
}

iframe.zip {
  display: none;
}

#rate.hidden {
  display: none;
}

#method {
  display: flex;
  flex-direction: row;
  gap: 2ch;
  border: solid 1px rgba(0, 0, 0, 0.1);
  height: min-content;
  align-self: center;
  width: fit-content;
  justify-self: end;
}
#method input {
  display: none;
}
#method label {
  padding: 10px;
  position: relative;
  cursor: pointer;
}
#method input:checked + label {
  background-color: rgba(0, 0, 0, 0.1);
}
#method input:disabled + label {
  opacity: 0.5;
  pointer-events: none;
}
#method label:not(:last-child)::after {
  content: '‚óè';
  color: rgba(0, 0, 0, 0.1);
  background-color: transparent;
  position: absolute;
  width: 2ch;
  height: 100%;
  right: -2ch;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
